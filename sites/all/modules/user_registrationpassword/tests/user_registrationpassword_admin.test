<?php

/**
 * @file
 * Administration tests for user_registrationpassword.module.
 */
class UserRegistrationPasswordAdministrationTestCase extends DrupalWebTestCase {

  /**
   * Implements getInfo().
   */
  public static function getInfo() {
    return array(
      'name' => t('Administration'),
      'description' => t('Administration page tests for the User Registration Password module.'),
      'group' => t('User Registration Password'),
    );
  }

  /**
   * Implements setUp().
   */
  public function setUp() {
    $modules = func_get_args();
    if (isset($modules[0]) && is_array($modules[0])) {
      $modules = $modules[0];
    }
    $modules[] = 'field_test';
    $modules[] = 'user_registrationpassword';
    parent::setUp($modules);
    $this->admin_user = $this->drupalCreateUser(array('administer permissions', 'administer users'));
  }

  /**
   * Implements testRegistrationWithEmailVerificationAndPasswordAdmin().
   */
  function testRegistrationWithEmailVerificationAndPasswordAdmin() {
    // Allow registration by site visitors without administrator
    // approval and set password during registration.
    variable_set('user_register', USER_REGISTER_VISITORS);
    // Disable e-mail verification.
    variable_set('user_email_verification', FALSE);
    // Prevent standard notification email to administrators and to user.
    variable_set('user_mail_register_pending_approval_notify', FALSE);
    // Set the registration variable to 2, register with pass, but require confirmation.
    variable_set('user_registrationpassword_registration', USER_REGISTRATIONPASS_VERIFICATION_PASS);


    $this->assertTrue(TRUE, t('Admin page WIP'));
  }
/**
  function setUpSystemConfigForm () {
    module_load_include('admin.inc', 'user');
    $this->form_id = 'user_admin_settings';
    $this->values = array(
      'anonymous' => array(
        '#value' => $this->randomString(10),
        '#config_name' => 'user.settings',
        '#config_key' => 'anonymous',
      ),
      'user_mail_cancel_confirm_body' => array(
        '#value' => $this->randomString(),
        '#config_name' => 'user.mail',
        '#config_key' => 'cancel_confirm.body',
      ),
      'user_mail_cancel_confirm_subject' => array(
        '#value' => $this->randomString(20),
        '#config_name' => 'user.mail',
        '#config_key' => 'cancel_confirm.subject',
      ),
    );
  }
 */

}

